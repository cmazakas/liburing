.\" Copyright (C) 2020 Jens Axboe <axboe@kernel.dk>
.\" Copyright (C) 2020 Red Hat, Inc.
.\"
.\" SPDX-License-Identifier: LGPL-2.0-or-later
.\"
.TH io_uring_get_sqe128 3 "October 22, 2025" "liburing-2.13" "liburing Manual"
.SH NAME
io_uring_get_sqe128 \- get the next available 128-byte submission queue entry
from the submission queue
.SH SYNOPSIS
.nf
.B #include <liburing.h>
.PP
.BI "struct io_uring_sqe *io_uring_get_sqe128(struct io_uring *" ring ");"
.fi
.SH DESCRIPTION
.PP
The
.BR io_uring_get_sqe128 (3)
function gets the next available 128-byte submission queue entry from the
submission queue belonging to the
.I ring
param.

On success
.BR io_uring_get_sqe128 (3)
returns a pointer to the submission queue entry. On failure
.B NULL
is returned.

If a submission queue entry is returned, it should be filled out via one of the
prep functions such as
.BR io_uring_prep_uring_cmd128 (3)
and submitted via
.BR io_uring_submit (3).

Note that neither
.BR io_uring_get_sqe128 (3)
nor the prep functions set (or clear) the
.B user_data
field of the SQE. If the caller expects
.BR io_uring_cqe_get_data (3)
or
.BR io_uring_cqe_get_data64 (3)
to return valid data when reaping IO completions, either
.BR io_uring_sqe_set_data (3)
or
.BR io_uring_sqe_set_data64 (3)
.B MUST
have been called before submitting the request.

.SH RETURN VALUE
.BR io_uring_get_sqe128 (3)
returns a pointer to the next submission queue event on success and NULL on
failure. If
.B NULL
is returned, the SQ ring either wasn't created with support for 128-byte SQE
entries (
.B IORING_SETUP_SQE128
or
.B IORING_SETUP_SQE_MIXED
) or is currently full and entries must be submitted for processing before new
ones can get allocated.
.SH SEE ALSO
.BR io_uring_get_sqe (3),
.BR io_uring_submit (3),
.BR io_uring_sqe_set_data (3)
